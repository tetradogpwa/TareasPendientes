<div class="@Class Tarea" @onclick="@(()=>OnClick.InvokeAsync(IdTarea))">
    @if (EditMode)
    {
        <textarea class="Texto-Tarea LaMitadDeEspacio" @bind="@Tarea.Texto" />
    }
    else
    {
        <div class="Texto-Tarea LaMitadDeEspacio">
            @((MarkupString)Tarea.Texto)
        </div>
    }
<div class="LaMitadDeEspacio">
    <text class="FechaHecho-Tarea ">@FechaHecho</text>
</div>
    @if (MostrarCheckHecho)
    {
      <input class="CheckBox-TareaHecha" type="checkbox" @onchange="HechoNoHecho" />
    }
</div>
@code {
    [Parameter] public bool EditMode { get; set; }
    [Parameter] public long IdTarea { get; set; }
    [Parameter] public Lista Lista { get; set; }
    [Parameter] public string Class { get;set;}
    [Parameter] public bool MostrarCheckHecho { get; set; } = true;
    [Parameter] public EventCallback<long> OnClick { get; set; }
    Tarea Tarea
    {
        get
        {
            return Lista.Get(IdTarea);
        }
    }
    string FechaHecho
    {
        get
        {
            return Lista.EstaHecha(Tarea)?new DateTime(Lista.FechaTareaHecha[Tarea.Id]).ToString("d/M/yyyy HH:mm:ss"): "";
        }
    }
    void HechoNoHecho()
    {
        if (Lista.EstaHecha(Tarea))
            Lista.TareaNoHecha(Tarea);
        else Lista.TareaHecha(Tarea);
    }

}
