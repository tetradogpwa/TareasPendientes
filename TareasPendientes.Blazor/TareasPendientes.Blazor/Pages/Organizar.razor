@page "/organitze"
@inject IJSRuntime JS
@if (context == null)
{
  <Cargando/>
}
else
{
    <h3>Categorias</h3>
    <div class="EditarListaCategorias">
        @*añadir/editar nombre Categoria*@
        @*Añadir/Quitar listas Categoria*@

    </div>
    <h3>Editar Listas</h3>
    <VisorListas Listas="@context.Listas" OnClick="@OnListaSeleccionada" />
    @if (context.Organizar.ListaSeleccionada != null)
    {
        <h3>Lista seleccionada: @context.Organizar.ListaSeleccionada.Nombre</h3>

        <h4>Herencia </h4>
        <div class="Herencia-TareaLista">

            @if (context.Organizar.NoHeredadas.Count > 0)
            {
                <h5>No heredadas</h5>
                <VisorListas Listas="@context.Organizar.NoHeredadas" OnClick="@PonListaEnLaHerencia" />
            }
            @if (context.Organizar.Heredadas.Count > 0)
            {
                <h5>Heredadas</h5>
                <VisorListas Listas="@context.Organizar.Heredadas" OnClick="@PreguntaSiQuiereQuitarLaLista" />
            }

        </div>

        <h4>Eliminar/Ocultar Tarea</h4>
        <div class="EliminarOcultar-TareaLista">

            <VisorTareas Lista="@context.Organizar.ListaSeleccionada" MostrarCheckHecho="@false" OnClick="@PreguntarSiQuiereEliminarTarea" />

        </div>
        @if (context.Organizar.ListaSeleccionada.IdTareasHeredadasOcultas.Count != 0)
        {
            <h4>Desocultar Tarea heredada</h4>

            <VisorTareas Lista="@context.Organizar.TareasOcultas" MostrarCheckHecho="@false" OnClick="@MostrarTareaHeredada" />
        }
    }
}

@code {
    [CascadingParameter] Context context { get; set; }

    void MostrarTareaHeredada(long id)
    {
        context.Organizar.ListaSeleccionada.IdTareasHeredadasOcultas.Remove(id);
    }
    void PonListaEnLaHerencia(Lista lista)
    {
        context.Organizar.ListaSeleccionada.AddList(lista);
    }
    async Task PreguntaSiQuiereQuitarLaLista(Lista lista)
    {
        if (await JS.PreguntaAsync($"Quieres quitar la lista '{lista.Nombre}' de la herencia?"))
        {
            context.Organizar.ListaSeleccionada.RemoveList(lista);

        }
    }
    void OnListaSeleccionada(Lista lista)
    {
        context.Organizar.ListaSeleccionada = lista;


    }
    async Task PreguntarSiQuiereEliminarTarea(long id)
    {
        
        if (!context.Organizar.ListaSeleccionada.TareasLista.ContainsKey(id) || await JS.PreguntaAsync($"Quieres eliminar esta tarea de la lista '{ context.Organizar.ListaSeleccionada.Nombre}'  ?"))
        {
            context.Organizar.ListaSeleccionada.RemoveTarea(id);
            ShouldRender();

        }

    }

}
