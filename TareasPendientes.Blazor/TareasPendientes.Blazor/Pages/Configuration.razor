@page "/configuration"

@using Blazor.FileReader

@inject IFileReaderService  fileReaderService
@inject IJSRuntime JS

@if (context == null)
{
    <Cargando />
}
else
{
    <h3>Configuration</h3>

    <h2>Exportar BD</h2>
    <input type="button" value="Download" @onclick="@ExportarBD" />

    <h2>Importar BD</h2>
    <input type="file" @ref="inputImportar" @onchange="@ImportarBD" accept=".xml" />
}
@code {
    [CascadingParameter] Context context { get; set; }
    ElementReference inputImportar;
    async Task ExportarBD()
    {
        string data = context.ToXmlDocument().OuterXml;
        string fileName = "BD_TareasPendientes " + DateTime.Now.ToString("d-M-yyyy HH mm ss") + ".xml";
        await JS.DownloadFileAsync(fileName, data, "application/xml");


    }
    async Task ImportarBD()
    {
        var file = (await fileReaderService.CreateReference(inputImportar).EnumerateFilesAsync()).FirstOrDefault();
        string data;
        if (file != null)
        {
            try
            {
                data = await file.ReadStringAsync();
                context.LoadXML(data);
            }
            catch (Exception ex)
            {
                await JS.MostrarMensajeAsync(ex.Message);
            }
        }
    }

}
