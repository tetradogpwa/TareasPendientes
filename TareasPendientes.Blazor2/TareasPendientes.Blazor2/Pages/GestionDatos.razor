@page "/GestionDatos"

@using Blazor.FileReader
@using TareasPendientes.Helpers

@inject IDataSave  DataSave
@inject IFileReaderService fileReaderService
@inject IJSRuntime JS

<h3>Gestión Datos</h3>
<text>Cargar </text>
<input type="file" @ref="inpCargarBD" @onchange="CargarBD" accept=".json" />
<br />
<br />
<button class="btn btn-success" @onclick="@(()=>JS.DownloadFileStringAsync("datos.json",Datos.ToJson(),"application/json","utf-8"))">Descargar</button>
<br />
<br />
<button class="btn btn-success" type="button" @onclick="@(()=>GuardaDatos())">Guardar datos</button>
@code {
    [CascadingParameter] Data Datos { get; set; }
    ElementReference inpCargarBD;
    async Task CargarBD()
    {
        const int BUFFER = 4 * 1024;

        foreach (IFileReference file in await fileReaderService.CreateReference(inpCargarBD).EnumerateFilesAsync())
        {
            try
            {
                Datos.LoadJson(System.Text.ASCIIEncoding.UTF8.GetString(await file.Read(BUFFER)));
            }
            catch (Exception ex)
            {
                await JS.MostrarMensajeAsync($"Ha ocurrido un error al cargar el archivo....\n {ex.Message}");
            }

        }
    }
    async Task GuardaDatos()
    {
        try
        {
            await DataSave.Save(JS, Datos.ToJson());
            await JS.MostrarMensajeAsync("Se ha guardado correctamente!");
        }
        catch (Exception ex)
        {
            await JS.MostrarMensajeAsync($"Ha ocurrido un problema al guardar...{ex.Message}");
        }
    }
}
