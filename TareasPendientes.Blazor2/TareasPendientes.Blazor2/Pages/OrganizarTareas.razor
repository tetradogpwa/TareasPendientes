@page "/Organizar/Tareas"
@inject IJSRuntime JS
<h3>Organizar Tareas</h3>
<br />
@if (Datos.Listas.Count > 0)
{
    @if (HayTareas)
    {<h4>Listas</h4>
        <ul class="Lista-Listas">
            @for(int i=0;i<Datos.Listas.Count;i++)
            {
                if (Datos.Listas.GetValueAt(i).Tareas.Count > 0)
                {
                    <li @onclick="@(() => ListaSeleccionada(Datos.Listas.GetValueAt(i)))">@Datos.Listas.GetValueAt(i).ToString()</li>
                }
            }
        </ul>
        @if (ListaActual != null)
        {
            <h4>Tareas Lista: @ListaActual.ToString()</h4>
            <VisorLista Lista="@ListaActualTemporal" OnClick="@((tarea) => TareaSeleccionada = tarea)"></VisorLista>
            @if (TareaSeleccionada != null)
            {

                <h4>Listas destino</h4>
                <h5>'@TareaSeleccionada.ToString()'</h5>
                <ul>
                    @for (int i = 0; i < Datos.Listas.Count; i++)
                    {
                        if (Datos.Listas.GetValueAt(i).Id != ListaActual.Id)
                        {
                            <li @onclick="@(() => PreguntarSiEstaSeguro(Datos.Listas.GetValueAt(i)))">@Datos.Listas.GetValueAt(i).ToString()</li>
                        }
                    }
                </ul>
            }
        }
        else
        {
            <h4>No hay ninguna lista seleccionada</h4>
        }}
    else
    {
        <h4>No hay tareas</h4>
    }
    }
    else
    {
        <h4>No hay listas...</h4>
    }
    @code {

        [CascadingParameter] Data Datos { get; set; }


        Lista ListaActual { get; set; } = null;
        Tarea TareaSeleccionada { get; set; } = null;
        Lista ListaActualTemporal { get; set; } = null;
        bool HayTareas
        {
            get
            {
                bool hay = false;
                for(int i=0;i<Datos.Listas.Count&&!hay;i++)
                      hay=Datos.Listas.GetValueAt(i).Tareas.Count != 0;
                return hay;
            }
        }

        void ListaSeleccionada(Lista lista)
        {
            ListaActual = lista;
            ListaActualTemporal = new Lista(ListaActual.Tareas.GetValues());
            TareaSeleccionada = null;
        }
        async Task PreguntarSiEstaSeguro(Lista listaDestino)
        {
            if (await JS.PreguntaAsync($"Deseas enviar la tarea '{TareaSeleccionada.ToString()}' a la lista {listaDestino.ToString()}?"))
            {
                ListaActual.Tareas.Remove(TareaSeleccionada);
                listaDestino.Tareas.Add(TareaSeleccionada);
                TareaSeleccionada = null;
                ListaActualTemporal = null;
                ListaActual = null;
            }
        }

    }
